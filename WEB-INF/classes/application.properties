# ===============================
# = DATA SOURCE
# ===============================
spring.datasource.driver-class-name = com.mysql.jdbc.Driver 
spring.datasource.url = jdbc:mysql://139.59.29.169:3306/tlkssr_test
spring.datasource.username = root
spring.datasource.password = ajhar777888666
spring.datasource.hikari.connection-test-query= SELECT 99
spring.datasource.hikari.idle-timeout=120

# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
spring.queries.users_query = select email, password, active from users where email=?
spring.queries.roles_query = select a.email,b.role from users a inner join user_authorities b on a.id=b.id where a.email=?
spring.queries.save_user= insert into users(email,password,active) values(?,?,?)
spring.queries.save_profile = insert into user_profiles(id,name,gender,mobile_number,picture) values((select id from users where email=?),?,?,?,?)
spring.queries.check_user_query= select email from users where email=?
spring.queries.save_role = insert into user_authorities(id,role) values ((select id from users where email=?),'USER')
spring.queries.past_appointments = select appnt.id,prof.name as professional_name,user.name as user_name,center.address,appnt.date_time,prof.designation,prof.picture from appointments as appnt inner join users as x on appnt.user_id=x.id  inner join professional_profiles  as prof on  appnt.professional_id=prof.id inner join user_profiles as user on user.id = x.id inner join health_centers as center on center.id=prof.health_center_id where email = ? and appnt.date_time<=now()
spring.queries.upcoming_appointments = select appnt.id,prof.name as professional_name,user.name as user_name,prof.designation,prof.picture,center.address,appnt.date_time from appointments as appnt inner join users as x on appnt.user_id=x.id  inner join professional_profiles  as prof on  appnt.professional_id=prof.id inner join user_profiles as user on user.id = x.id inner join health_centers as center on center.id=prof.health_center_id where email = ? and appnt.date_time>now()
spring.queries.user_profile= select a.name,a.gender,a.mobile_number,a.picture from user_profiles a inner join users b on a.id=b.id where b.email=?
spring.queries.get_health_centers = select center.id as center_id, center.name as center_name, center.latitude, center.longitude, center.address, center.website, prof.id as prof_id, prof.name as prof_name, prof.designation, prof.qualification from health_centers as center, professional_profiles prof where center.id = prof.health_center_id
spring.queries.health_centers_global = select id,name,address,latitude,longitude,website from health_centers where latitude>? and longitude>? and latitude<? and longitude<?
spring.queries.professional_get_slots = select avail.professional_id,avail.date_time,'available' as status from appointment_availability as avail, users as u where u.email = ? and u.id = avail.professional_id and avail.date_time>now() union select avail.professional_id,avail.date_time,'booked' as status from appointments as avail, users as u where u.email = ? and u.id = avail.professional_id and avail.date_time>now()
spring.queries.save_health_center = insert into health_centers(name, address, website, latitude, longitude) values(?,?,?,?,?)
spring.queries.common.get_health_centers=select id,name,address,latitude,longitude,website from health_centers
spring.queries.professional.save_user=insert into users(email,password,active) values(?,?,?) 
spring.queries.professional.save_role=insert into user_authorities(id,role) values ((select id from users where email=?),'PROFESSIONAL')
spring.queries.professional.save_profile=insert into professional_profiles(id,name,gender,mobile_number,picture,document,designation,qualification,health_center_id) values((select id from users where email=?),?,?,?,?,?,?,?,?)
spring.queries.professional.delete_slot= delete from appointment_availability where professional_id = (select id from users where email=?) and date_time = ?
spring.queries.professional.insert_slot= insert into appointment_availability(professional_id, date_time) values((select id from users where email=?), ?)
spring.queries.professional.check_slot_availablity = select count(*) as count from appointment_availability where professional_id = (select id from users where email=?) and date_time=? 
spring.queries.get_user_id= select id from users where email=?
spring.queries.user.get_professional=select id, name, designation, qualification from professional_profiles where health_center_id = ?
spring.queries.user.get_slots = select professional_id,date_time,'available' as status from appointment_availability where professional_id = ? and date_time>now() 
spring.queries.user.confirm_slot = insert into appointments(professional_id,date_time,user_id,booking_date_time) select avail.professional_id, avail.date_time , (select id from users where email=?),now() as id from appointment_availability avail where (select count(date_time) from appointment_availability where date_time=?)>0 and avail.date_time=? and avail.professional_id=?
spring.queries.user.get_connected_professionals=select distinct(prof.id) as id,prof.name, prof.designation, center.address, prof.picture,prof.qualification from appointments as appnt inner join users as x on x.id = appnt.user_id inner join professional_profiles as prof on appnt.professional_id = prof.id inner join health_centers as center on center.id = prof.health_center_id where x.email = ?
spring.queries.user.delete_confirmed_slot= delete from appointment_availability where professional_id = ? and date_time = ?
spring.queries.professional.get_upcoming_appointments = select user.name as user_name, appnt.date_time , user.picture as user_picture from appointments as appnt inner join user_profiles user on user.id = appnt.user_id inner join users x on x.id = appnt.professional_id inner join professional_profiles prof on prof.id= appnt.professional_id where x.email = ? and appnt.date_time>now()
 




spring.mvc.view.prefix = /WEB-INF/jsp_resources/
spring.mvc.view.suffix = .jsp


####select center.id as center_id, center.name as center_name, center.latitude, center.longitude, center.address, center.website, prof.id as prof_id, prof.name as prof_name, prof.designation, prof.qualification from health_centers as center, professional_profiles prof where center.id = prof.health_center_id and center.latitude>? and center.longitude>? and center.latitude<? and center.longitude<?